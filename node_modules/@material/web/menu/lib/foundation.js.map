{"version":3,"file":"foundation.js","sourceRoot":"","sources":["foundation.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {MDCMenuSurfaceFoundation} from '../../menusurface/lib/foundation.js';\n\nimport {MDCMenuAdapter} from './adapter.js';\nimport {cssClasses, numbers, strings} from './constants.js';\n\nconst LIST_ITEM_DISABLED_CLASS = 'md3-list-item--disabled';\n\nexport class MDCMenuFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  private readonly adapter: MDCMenuAdapter;\n  private closeAnimationEndTimerId = 0;\n  private selectedIndex = -1;\n\n  /**\n   * @see {@link MDCMenuAdapter} for typing information on parameters and return types.\n   */\n  static get defaultAdapter(): MDCMenuAdapter {\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n    return {\n      addClassToElementAtIndex: () => undefined,\n      removeClassFromElementAtIndex: () => undefined,\n      addAttributeToElementAtIndex: () => undefined,\n      removeAttributeFromElementAtIndex: () => undefined,\n      getAttributeFromElementAtIndex: () => null,\n      elementContainsClass: () => false,\n      closeSurface: () => undefined,\n      getElementIndex: () => -1,\n      notifySelected: () => undefined,\n      getMenuItemCount: () => 0,\n      getSelectedSiblingOfItemAtIndex: () => -1,\n      isSelectableItemAtIndex: () => false,\n    };\n    // tslint:enable:object-literal-sort-keys\n  }\n\n  constructor(adapter: Partial<MDCMenuAdapter>) {\n    this.adapter = {...MDCMenuFoundation.defaultAdapter, ...adapter};\n  }\n\n  destroy() {\n    if (this.closeAnimationEndTimerId) {\n      clearTimeout(this.closeAnimationEndTimerId);\n    }\n\n    this.adapter.closeSurface();\n  }\n\n  handleKeydown(evt: KeyboardEvent) {\n    const {key, keyCode} = evt;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isTab) {\n      this.adapter.closeSurface(/** skipRestoreFocus */ true);\n    }\n  }\n\n  handleItemAction(listItem: Element) {\n    const index = this.adapter.getElementIndex(listItem);\n    if (index < 0) {\n      return;\n    }\n\n    this.adapter.notifySelected({index});\n    const skipRestoreFocus = this.adapter.getAttributeFromElementAtIndex(\n                                 index, strings.SKIP_RESTORE_FOCUS) === 'true';\n    this.adapter.closeSurface(skipRestoreFocus);\n\n    // Wait for the menu to close before adding/removing classes that affect\n    // styles.\n    this.closeAnimationEndTimerId = setTimeout(() => {\n      // Recompute the index in case the menu contents have changed.\n      const recomputedIndex = this.adapter.getElementIndex(listItem);\n      if (recomputedIndex >= 0 &&\n          this.adapter.isSelectableItemAtIndex(recomputedIndex)) {\n        this.setSelectedIndex(recomputedIndex);\n      }\n    }, MDCMenuSurfaceFoundation.numbers.TRANSITION_CLOSE_DURATION);\n  }\n\n  /** @return Index of the currently selected list item within the menu. */\n  getSelectedIndex() {\n    return this.selectedIndex;\n  }\n\n  /**\n   * Selects the list item at `index` within the menu.\n   * @param index Index of list item within the menu.\n   */\n  setSelectedIndex(index: number) {\n    this.validatedIndex(index);\n\n    if (!this.adapter.isSelectableItemAtIndex(index)) {\n      throw new Error(\n          'MDCMenuFoundation: No selection group at specified index.');\n    }\n\n    const prevSelectedIndex =\n        this.adapter.getSelectedSiblingOfItemAtIndex(index);\n    if (prevSelectedIndex >= 0) {\n      this.adapter.removeAttributeFromElementAtIndex(\n          prevSelectedIndex, strings.ARIA_CHECKED_ATTR);\n      this.adapter.removeClassFromElementAtIndex(\n          prevSelectedIndex, cssClasses.MENU_SELECTED_LIST_ITEM);\n    }\n\n    this.adapter.addClassToElementAtIndex(\n        index, cssClasses.MENU_SELECTED_LIST_ITEM);\n    this.adapter.addAttributeToElementAtIndex(\n        index, strings.ARIA_CHECKED_ATTR, 'true');\n\n    this.selectedIndex = index;\n  }\n\n  /**\n   * Sets the enabled state to isEnabled for the menu item at the given index.\n   * @param index Index of the menu item\n   * @param isEnabled The desired enabled state of the menu item.\n   */\n  setEnabled(index: number, isEnabled: boolean): void {\n    this.validatedIndex(index);\n\n    if (isEnabled) {\n      this.adapter.removeClassFromElementAtIndex(\n          index, LIST_ITEM_DISABLED_CLASS);\n      this.adapter.addAttributeToElementAtIndex(\n          index, strings.ARIA_DISABLED_ATTR, 'false');\n    } else {\n      this.adapter.addClassToElementAtIndex(index, LIST_ITEM_DISABLED_CLASS);\n      this.adapter.addAttributeToElementAtIndex(\n          index, strings.ARIA_DISABLED_ATTR, 'true');\n    }\n  }\n\n  private validatedIndex(index: number): void {\n    const menuSize = this.adapter.getMenuItemCount();\n    const isIndexInRange = index >= 0 && index < menuSize;\n\n    if (!isIndexInRange) {\n      throw new Error('MDCMenuFoundation: No list item at specified index.');\n    }\n  }\n}\n"]}
{"version":3,"file":"menu-button.js","sourceRoot":"","sources":["menu-button.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAC,IAAI,EAAE,UAAU,EAAiB,MAAM,KAAK,CAAC;AACrD,OAAO,EAAC,qBAAqB,EAAC,MAAM,mBAAmB,CAAC;AAExD,OAAO,EAAC,IAAI,EAAC,MAAM,WAAW,CAAC;AAE/B;;;GAGG;AACH,MAAM,OAAO,UAAW,SAAQ,UAAU;IAOxC,IAAI,MAAM;QACR,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAA;SAChE;QACD,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,IAAI,IAAI;QACN,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1C,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAA;SAC9D;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,EAAE;YACnD,MAAM,IAAI,KAAK,CACX,iEAAiE;gBACjE,iBAAiB,CAAC,CAAC;SACxB;QACD,OAAO,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAEkB,MAAM;QACvB,OAAO,IAAI,CAAA;;;;uBAIQ,IAAI,CAAC,iBAAiB;yBACpB,IAAI,CAAC,mBAAmB;;;;;KAK5C,CAAC;IACJ,CAAC;IAEkB,YAAY,CAAC,iBAAiC;QAC/D,KAAK,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAEtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACrB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAChC;IACH,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,KAAoB;QAC9C,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW;YAAE,OAAO;QAEjE,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;SACtC;aAAM,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;SACvC;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,KAAmB;QAC3C,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YAClB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,OAAO;SACR;QAED,2EAA2E;QAC3E,6CAA6C;QAC7C,MAAM,qBAAqB,GAAG,KAAK,CAAC,WAAW,KAAK,EAAE,CAAC;QACvD,IAAI,qBAAqB,EAAE;YACzB,4DAA4D;YAC5D,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;SACtC;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;CACF;AAjFC;IADC,qBAAqB,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;;0DACG;AAG1D;IADC,qBAAqB,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;;wDACG","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement, PropertyValues} from 'lit';\nimport {queryAssignedElements} from 'lit/decorators.js';\n\nimport {Menu} from './menu.js';\n\n/**\n * Menu button component that automatically attaches a slotted menu to the\n * slotted button.\n */\nexport class MenuButton extends LitElement {\n  @queryAssignedElements({slot: 'button', flatten: true})\n  protected readonly buttonAssignedElements!: HTMLElement[];\n\n  @queryAssignedElements({slot: 'menu', flatten: true})\n  protected readonly menuAssignedElements!: HTMLElement[];\n\n  get button(): HTMLElement {\n    if (this.buttonAssignedElements.length === 0) {\n      throw new Error('MenuButton: Missing a slot=\"button\" element.')\n    }\n    return this.buttonAssignedElements[0];\n  }\n\n  get menu(): Menu {\n    if (this.menuAssignedElements.length === 0) {\n      throw new Error('MenuButton: Missing a slot=\"menu\" element.')\n    }\n    if (!(this.menuAssignedElements[0] instanceof Menu)) {\n      throw new Error(\n          'MenuButton: The slot=\"menu\" element must be an instance of the ' +\n          'Menu component.');\n    }\n    return this.menuAssignedElements[0];\n  }\n\n  protected override render() {\n    return html`\n      <div class=\"md3-menu-button\">\n        <span>\n          <slot name=\"button\"\n              @click=${this.handleButtonClick}\n              @keydown=${this.handleButtonKeydown}>\n          </slot>\n        </span>\n        <span><slot name=\"menu\"></slot></span>\n      </div>\n    `;\n  }\n\n  protected override firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n\n    if (!this.menu.anchor) {\n      this.menu.anchor = this.button;\n    }\n  }\n\n  /**\n   * If key event is ArrowUp or ArrowDown, opens the menu.\n   */\n  private handleButtonKeydown(event: KeyboardEvent) {\n    if (event.key !== 'ArrowUp' && event.key !== 'ArrowDown') return;\n\n    if (event.key === 'ArrowUp') {\n      this.menu.defaultFocus = 'LAST_ITEM';\n    } else if (event.key === 'ArrowDown') {\n      this.menu.defaultFocus = 'FIRST_ITEM';\n    }\n    this.menu.show();\n  }\n\n  /**\n   * Toggles the menu on button click.\n   */\n  private handleButtonClick(event: PointerEvent) {\n    if (this.menu.open) {\n      this.menu.close();\n      return;\n    }\n\n    // Whether the click is from SPACE or ENTER keypress on a button, for which\n    // the browser fires a synthetic click event.\n    const isSyntheticClickEvent = event.pointerType === '';\n    if (isSyntheticClickEvent) {\n      // Key events should automatically focus on first menu item.\n      this.menu.defaultFocus = 'FIRST_ITEM';\n    } else {\n      this.menu.defaultFocus = 'LIST_ROOT';\n    }\n\n    this.menu.show();\n  }\n}\n"]}
{"version":3,"file":"adapter.js","sourceRoot":"","sources":["adapter.ts"],"names":[],"mappings":"AAAA;;;;GAIG","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {MDCMenuItemEventDetail} from './types.js';\n\n/**\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCMenuAdapter {\n  /**\n   * Adds a class to the element at the index provided.\n   */\n  addClassToElementAtIndex(index: number, className: string): void;\n\n  /**\n   * Removes a class from the element at the index provided\n   */\n  removeClassFromElementAtIndex(index: number, className: string): void;\n\n  /**\n   * Adds an attribute, with value, to the element at the index provided.\n   */\n  addAttributeToElementAtIndex(index: number, attr: string, value: string): void;\n\n  /**\n   * Removes an attribute from an element at the index provided.\n   */\n  removeAttributeFromElementAtIndex(index: number, attr: string): void;\n\n  /**\n   * @return the attribute string if present on an element at the index\n   * provided, null otherwise.\n   */\n  getAttributeFromElementAtIndex(index: number, attr: string): string|null;\n\n  /**\n   * @return true if the element contains the className.\n   */\n  elementContainsClass(element: Element, className: string): boolean;\n\n  /**\n   * Closes the menu-surface.\n   * @param skipRestoreFocus Whether to skip restoring focus to the previously\n   *    focused element after the surface has been closed.\n   */\n  closeSurface(skipRestoreFocus?: boolean): void;\n\n  /**\n   * @return Index of the element in the list or -1 if it is not in the list.\n   */\n  getElementIndex(element: Element): number;\n\n  /**\n   * Emit an event when a menu item is selected.\n   */\n  notifySelected(evtData: MDCMenuItemEventDetail): void;\n\n  /** @return Returns the menu item count. */\n  getMenuItemCount(): number;\n\n  /**\n   * @return Returns selected list item index within the same selection group which is\n   * a sibling of item at given `index`.\n   * @param index Index of the menu item with possible selected sibling.\n   */\n  getSelectedSiblingOfItemAtIndex(index: number): number;\n\n  /**\n   * @return Returns true if item at specified index is contained within an `.mdc-menu__selection-group` element.\n   * @param index Index of the selectable menu item.\n   */\n  isSelectableItemAtIndex(index: number): boolean;\n}\n"]}